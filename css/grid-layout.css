* {
    box-sizing: border-box;
}
.container {
    margin: 0 auto;
    width: 80%;
    max-width: 1200px;
}
.row {
    width: 100%;
}

/*Here we are using the after pseudo element to ensure that our rows start a new section vertically.*/
.row:after {
    content: "";
    display: table;
    clear: both;
}
.column {
    float: left;
    padding: 10px;
    border: black solid 1px;
    background-color: #3B94D9;
}
.column.one-half {
    width: 50%;
}
.column.one-third {
    width: 33.3333%;
}
.column.one-fourth {
    width: 25%;
}
.column.one-sixth {
    width: 16.6666%;
}
.column.one-eighth {
    width: 12.5%;
}
.column.two-third {
    width: 66.666%;
}
.column.three-eighth {
    width: 37.5%;
}
.column.two-fourth {
    width: 50%;
}
.column.three-sixth {
    width: 50%;
}
.offset-one-half {
    margin: 50%;
}
.offset-one-third {
    margin: 33.33%
}
.offset-two-third {
    margin: 66.6666%;
}
.offset-one-fourth {
    margin: 25%;
}
/*Often times we will want to have a layout with columns that take up a certain amount of width on larger screen sizes, but that take up the full width on smaller screen sizes. The example layout from the media queries exercise is an example of this.*/
/@media screen and (max-width: 768px) {
    .column.one-third, .column.one-half, .column.one-fourth,
    .column.one-sixth, .column.one-eighth {
        width: 100%;
    }
}
